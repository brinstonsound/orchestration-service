{"swagger":"2.0","info":{"title":"Airhorn Orchestration API","version":"1.0"},"host":"example.com","paths":{"/orchestrations":{"get":{"summary":"List Orchestration","operationId":"findOrchestrations","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/orchestration-output"}}},"500":{"$ref":"#/responses/error-response"}},"tags":["Orchestrations"]},"post":{"summary":"Create Orchestration","operationId":"createOrchestration","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/orchestration-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/orchestration-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Orchestrations"]}},"/orchestrations/{orchestrationId}":{"parameters":[{"name":"orchestrationId","in":"path","type":"string","required":true}],"get":{"summary":"Get Orchestration","operationId":"getOrchestration","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/orchestration-output-detailed"},"examples":{"application/json":{"id":584103.9661928564,"name":"sunt","symphonyId":66482952.95097384,"startDelay":54244686.584998704,"actions":[{},{}]}}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Orchestrations"]},"put":{"summary":"Update Orchestration","operationId":"updateOrchestration","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/orchestration-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/orchestration-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Orchestrations"]},"delete":{"summary":"Delete Orchestration","operationId":"deleteOrchestration","responses":{"204":{"description":""},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Orchestrations"]}},"/actions":{"get":{"summary":"List Action","operationId":"findActions","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/action-output"}},"examples":{}},"500":{"$ref":"#/responses/error-response"}},"tags":["Actions"]},"post":{"summary":"Create Action","operationId":"createAction","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/action-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/action-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Actions"]}},"/actions/{actionId}":{"parameters":[{"name":"actionId","in":"path","type":"string","required":true}],"get":{"summary":"Get Action","operationId":"getAction","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/action-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Actions"]},"put":{"summary":"Update Action","operationId":"updateAction","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/action-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/action-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Actions"]},"delete":{"summary":"Delete Action","operationId":"deleteAction","responses":{"204":{"description":""},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Actions"]}},"/symphonies":{"get":{"summary":"List all Symphonies","operationId":"findSymphonies","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/symphony-output"}}},"500":{"$ref":"#/responses/error-response"}},"tags":["Symphonies"]},"post":{"summary":"Create Symphony","operationId":"createSymphony","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/symphony-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/symphony-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Symphonies"]}},"/symphonies/{symphonyId}":{"parameters":[{"name":"symphonyId","in":"path","type":"string","required":true}],"get":{"summary":"Get Symphony","operationId":"getSymphony","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/symphony-output-detailed"},"examples":{}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Symphonies"]},"put":{"summary":"Update Symphony","operationId":"updateSymphony","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/symphony-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/symphony-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Symphonies"]},"delete":{"summary":"Delete Symphony","operationId":"deleteSymphony","responses":{"204":{"description":""},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Symphonies"]}},"/sounds":{"get":{"summary":"List all Sounds","operationId":"findSounds","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/sound-output"}}},"500":{"$ref":"#/responses/error-response"}},"tags":["Sounds"]},"post":{"summary":"Create Sound","operationId":"createSound","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/sound-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/sound-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Sounds"]}},"/sounds/{soundId}":{"parameters":[{"name":"soundId","in":"path","type":"string","required":true}],"get":{"summary":"Get Sound","operationId":"getSound","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/sound-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Sounds"]},"put":{"summary":"Update Sound","operationId":"updateSound","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/sound-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/sound-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Sounds"]},"delete":{"summary":"Delete Sound","operationId":"deleteSound","responses":{"204":{"description":""},"404":{"$ref":"#/responses/error-response"},"500":{"$ref":"#/responses/error-response"}},"tags":["Sounds"]}},"/orchestrations/{orchestrationId}/execute":{"post":{"responses":{"200":{"description":"","schema":{"type":"object","properties":{}}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"summary":"Execute the orchestration","tags":["Orchestrations"]},"parameters":[{"name":"orchestrationId","in":"path","type":"string","required":true}]},"/triggers":{"get":{"summary":"List all Triggers","operationId":"findTriggers","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/trigger-output"}}},"500":{"$ref":"#/responses/error-response"}},"tags":["Triggers"]},"post":{"summary":"Create Trigger","operationId":"createTrigger","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/trigger-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/trigger-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Triggers"]}},"/triggers/{triggerId}":{"parameters":[{"name":"triggerId","in":"path","type":"string","required":true}],"get":{"summary":"Get Trigger","operationId":"getTrigger","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/trigger-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Triggers"]},"put":{"summary":"Update Trigger","operationId":"updateTrigger","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/trigger-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/trigger-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Triggers"]},"delete":{"summary":"Delete Trigger","operationId":"deleteTrigger","responses":{"204":{"description":""},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Triggers"]}},"/triggers/{triggerId}/fire":{"post":{"responses":{"200":{"description":"","schema":{"type":"object","properties":{}}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"summary":"Fire the selected trigger.","description":"When a trigger is fired, the orchastration API will look up all orchastrations that are associated with it and execute them.","tags":["Triggers"]},"parameters":[{"name":"triggerId","in":"path","type":"string","required":true}]},"/soundcategories":{"get":{"summary":"List SoundCategory","operationId":"findSoundCategories","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/sound-category-output"}}},"500":{"$ref":"#/responses/error-response"}},"tags":["Sound Categories"]},"post":{"summary":"Create SoundCategory","operationId":"createSoundCategory","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/sound-category-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/sound-category-output-detailed"}},"500":{"$ref":"#/responses/error-response"}},"tags":["Sound Categories"]}},"/soundcategories/{soundCategoryId}":{"parameters":[{"name":"soundCategoryId","in":"path","type":"string","required":true}],"get":{"summary":"Get SoundCategory","operationId":"getSoundCategory","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/sound-category-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Sound Categories"]},"put":{"summary":"Update SoundCategory","operationId":"updateSoundCategory","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/sound-category-input"}}],"responses":{"200":{"description":"","schema":{"$ref":"#/definitions/sound-category-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Sound Categories"]},"delete":{"summary":"Delete SoundCategory","operationId":"deleteSoundCategory","responses":{"204":{"description":""},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}},"tags":["Sound Categories"]}},"/players":{"get":{"summary":"List Player","operationId":"findPlayers","responses":{"200":{"description":"","schema":{"type":"array","items":{"$ref":"#/definitions/player-output"}}},"500":{"$ref":"#/responses/error-response"}}},"post":{"summary":"Create Player","operationId":"createPlayer","parameters":[{"in":"body","name":"body","schema":{"$ref":"#/definitions/player-input"}}],"responses":{"201":{"description":"","schema":{"$ref":"#/definitions/player-output-detailed"}},"500":{"$ref":"#/responses/error-response"}}}},"/players/{playerId}":{"parameters":[{"name":"playerId","in":"path","type":"string","required":true}],"get":{"summary":"Get Player","operationId":"getPlayer","responses":{"200":{"description":"","schema":{"$ref":"#/definitions/player-output-detailed"}},"404":{"description":""},"500":{"$ref":"#/responses/error-response"}}},"delete":{"summary":"Delete Player","operationId":"deletePlayer","responses":{"204":{"description":""},"500":{"$ref":"#/responses/error-response"},"default":{"description":""}},"description":"This operation is called by the sound server when it finishes playing a sound."}}},"definitions":{"orchestration-common":{"title":"Orchestration","description":"A set of programmed actions that fire on demand.  The simplest orchestration is to play a sound.  An orchestration can also play multiple sounds simultaneously.  Not only that, but since our sound server is now just an HTTP call away, orchestrations can now call out to other services than just the sound service.  We could build an actuator service that could move things on the layout.  The orchestration could then be programmed to open a gate and play a sound.  Orchestrations could also call out to external services, perhaps to operate smart home devices. ","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"startDelay":{"type":"integer"},"actions":{"type":"array","items":{"$ref":"#/definitions/action-common"}},"symphonyId":{"type":"integer"},"triggers":{"type":"array","items":{"$ref":"#/definitions/trigger-common"}}},"required":["id","name","symphonyId"]},"orchestration-input":{"title":"Orchestration Input","description":"The properties that are allowed when creating or updating a Orchestration.","allOf":[{"$ref":"#/definitions/orchestration-common"},{"type":"object","properties":{}}]},"orchestration-output":{"title":"Orchestration Output","description":"The properties that are included when fetching a list of Orchestrations.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/orchestration-common"}]},"orchestration-output-detailed":{"title":"Orchestration Output Detailed","description":"The properties that are included when fetching a single Orchestration.","allOf":[{"$ref":"#/definitions/orchestration-output"},{"type":"object"}]},"action-common":{"title":"Action","description":"An action is the atomic unit within an orchestration.  There can be multiple actions in each orchestration.\n Actions can include:\n* Call the sound server to play a sound\n* Call the actuator server to move a motor or open/close a switch\n* Call another orchestration\n* Call an external API\nAll actions are executed simultaneously by the orchestration, however each action can have a delayed start.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"orchestrationId":{"type":"integer"},"sound":{"type":"object","properties":{"soundId":{"type":"number"},"volume":{"type":"number"},"speakers":{"type":"array","items":{"type":"integer"}}}},"rawApiCall":{"type":"string"}},"required":["id","name","orchestrationId"]},"action-input":{"title":"Action Input","description":"The properties that are allowed when creating or updating a Action.","allOf":[{"$ref":"#/definitions/action-common"},{"type":"object","properties":{}}]},"action-output":{"title":"Action Output","description":"The properties that are included when fetching a list of Actions.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/action-common"}]},"action-output-detailed":{"title":"Action Output Detailed","description":"The properties that are included when fetching a single Action.","allOf":[{"$ref":"#/definitions/action-output"},{"type":"object","properties":{}}]},"symphony-common":{"title":"Symphony","description":"A symphony is a group of orchestrations.  Only one symphony can be active at one time.  These are used in customizing environments by allowing the user to try different setups without endangering the existing environment configuration.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"isActive":{"type":"boolean"},"":{"type":"array","items":{"$ref":"#/definitions/orchestration-common"}}}},"symphony-input":{"title":"Symphony Input","description":"The properties that are allowed when creating or updating a Symphony.","allOf":[{"$ref":"#/definitions/symphony-common"},{"type":"object","properties":{}}]},"symphony-output":{"title":"Symphony Output","description":"The properties that are included when fetching a list of Symphonies.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/symphony-common"}]},"symphony-output-detailed":{"title":"Symphony Output Detailed","description":"The properties that are included when fetching a single Symphony.","allOf":[{"$ref":"#/definitions/symphony-output"},{"type":"object","properties":{}}]},"sound-common":{"title":"Sound","description":"Describes a sound file in the Airhorn library.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"soundCategoryId":{"type":"string"},"fileName":{"type":"string"}}},"sound-input":{"title":"Sound Input","description":"The properties that are allowed when creating or updating a Sound.","allOf":[{"$ref":"#/definitions/sound-common"},{"type":"object","properties":{}}]},"sound-output":{"title":"Sound Output","description":"The properties that are included when fetching a list of Sounds.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/sound-common"}]},"sound-output-detailed":{"title":"Sound Output Detailed","description":"The properties that are included when fetching a single Sound.","allOf":[{"$ref":"#/definitions/sound-output"},{"type":"object","properties":{}}]},"trigger-common":{"title":"Trigger","description":"A trigger is an event source for an orchestration for execute.  There are three types of triggers that we will control in Airhorn.  \n* Our classic hard-wired trigger that is a switch of some sort either embedded into the layout or elsewhere in the environment.  This trigger uses the switchNumber property.\n* A timer that can be looped or delayed or both (from our existing \"ambience\" model).  This trigger can be a continuously looping trigger (when imterIntervalMin and timerIntervalMax are equal), or a random timer (when timerIntervalMin is less than timerIntervalMax)\n* An external trigger, such as from an interface to Digitrax.  This shares the switchNumber property with our classic triggers.\nWhen a trigger is fired, it will look up all orchestrations that are associated with it and execute them.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"type":{"type":"string","enum":["SWITCH","TIMER"]},"switchNumber":{"type":"integer"},"timerIntervalMin":{"type":"integer"},"timerIntervalMax":{"type":"integer"}}},"trigger-input":{"title":"Trigger Input","description":"The properties that are allowed when creating or updating a Trigger.","allOf":[{"$ref":"#/definitions/trigger-common"},{"type":"object","properties":{}}]},"trigger-output":{"title":"Trigger Output","description":"The properties that are included when fetching a list of Triggers.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/trigger-common"}]},"trigger-output-detailed":{"title":"Trigger Output Detailed","description":"The properties that are included when fetching a single Trigger.","allOf":[{"$ref":"#/definitions/trigger-output"},{"type":"object","properties":{}}]},"sound-category-common":{"title":"SoundCategory","description":"A sound category is a grouping of sounds in the Airhorn library.  It is intended to be used for sound library management and to make creating and editing orchastrations simpler.","type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"parentId":{"type":"integer"},"sounds":{"type":"array","items":{"$ref":"#/definitions/sound-common"}}}},"sound-category-input":{"title":"SoundCategory Input","description":"The properties that are allowed when creating or updating a SoundCategory.","allOf":[{"$ref":"#/definitions/sound-category-common"},{"type":"object","properties":{}}]},"sound-category-output":{"title":"SoundCategory Output","description":"The properties that are included when fetching a list of SoundCategories.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/sound-category-common"}]},"sound-category-output-detailed":{"title":"SoundCategory Output Detailed","description":"The properties that are included when fetching a single SoundCategory.","allOf":[{"$ref":"#/definitions/sound-category-output"},{"type":"object","properties":{}}]},"player-common":{"title":"Player","description":"A player represents a sound that is currently playing.  Player Id's are provided by the sound server when it is called upon to play a sound.  When a sound is finished playing its playerId should be removed from the collection.","type":"object","properties":{"id":{"type":"integer"}}},"player-input":{"title":"Player Input","description":"The properties that are allowed when creating or updating a Player.","allOf":[{"$ref":"#/definitions/player-common"},{"type":"object","properties":{}}]},"player-output":{"title":"Player Output","description":"The properties that are included when fetching a list of Players.","allOf":[{"type":"object","properties":{}},{"$ref":"#/definitions/player-common"}]},"player-output-detailed":{"title":"Player Output Detailed","description":"The properties that are included when fetching a single Player.","allOf":[{"$ref":"#/definitions/player-output"},{"type":"object","properties":{}}]}},"schemes":["http"],"consumes":["application/json"],"produces":["application/json"],"tags":[{"name":"Actions"},{"name":"Orchestrations"},{"name":"Sounds"},{"name":"Symphonies"},{"name":"Triggers"},{"name":"Sound Categories"}],"responses":{"error-response":{"description":"Common response used for internal error (500) reporting.","schema":{"type":"object","properties":{"message":{"type":"string"}}}}}}
